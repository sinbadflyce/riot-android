apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "io.realm:realm-gradle-plugin:5.9.0"
    }
}

android {
    compileSdkVersion 28

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 923
        versionName "0.9.23"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // prevent the "superClassName is empty" error for classes not annotated as tests
    tasks.withType(Test) {
        scanForTestClasses = false
        include "**/*Test.class" // whatever Ant pattern matches your test class files
    }

    android.libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
            source = android.sourceSets.main.java.srcDirs
            classpath = files(((Object) android.bootClasspath.join(File.pathSeparator)))
            // Comment this line else we get a gradle error:
            // Cannot create variant 'android-lint' after configuration ':matrix-sdk:debugRuntimeElements' has been resolved
            // Javadoc is still well generated without this line
            // classpath += files(variant.javaCompiler.classpath.files)

            options.windowTitle("Matrix Android SDK ${defaultConfig.versionName}")
            options.docTitle("Matrix Android SDK ${defaultConfig.versionName}<br/><i>Please note that Kotlin files are not part of the Javadoc</i>")
            options.header("<b>Matrix Android SDK ${defaultConfig.versionName}</b><br/><i>Please note that Kotlin files are not part of the Javadoc</i>")
            options.bottom("&copy; 2019 New Vector Ltd All rights reserved.")

            exclude '**/BuildConfig.java'
            exclude '**/R.java'
            // Exclude all kotlin files from javadoc file (it does not work and make the task fails).
            excludes = ['**/*.kt']
            failOnError false
        }
    }

    buildTypes {
        debug {
            resValue "string", "git_sdk_revision", "\"${gitRevision()}\""
            resValue "string", "git_sdk_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_sdk_revision_date", "\"${gitRevisionDate()}\""

            // Set to BODY instead of NONE to enable logging
            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "OKHTTP_LOGGING_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.NONE"

            minifyEnabled false
        }

        release {
            resValue "string", "git_sdk_revision", "\"${gitRevision()}\""
            resValue "string", "git_sdk_revision_unix_date", "\"${gitRevisionUnixDate()}\""
            resValue "string", "git_sdk_revision_date", "\"${gitRevisionDate()}\""

            buildConfigField "okhttp3.logging.HttpLoggingInterceptor.Level", "OKHTTP_LOGGING_LEVEL", "okhttp3.logging.HttpLoggingInterceptor.Level.NONE"

            libraryVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFileName
                    if (outputFile != null && outputFile.endsWith('.aar')) {
                        output.outputFileName = outputFile.replace(".aar", "-${defaultConfig.versionName}.aar")
                    }
                }
            }
        }
    }


    lintOptions {
        warning 'MissingTranslation'

        // Treat some warnings as errors
        // Resources
        error 'TypographyEllipsis'
        warning 'ImpliedQuantity'

        // UX
        error 'ButtonOrder'

        // Layout
        error 'StringFormatCount'
        error 'HardcodedText'
        error 'SpUsage'
        error 'ObsoleteLayoutParam'
        error 'InefficientWeight'
        error 'DisableBaselineAlignment'
        error 'ScrollViewSize'

        // RTL
        error 'RtlEnabled'
        error 'RtlHardcoded'
        error 'RtlSymmetry'

        // Code
        error 'SetTextI18n'
        error 'ViewConstructor'
        error 'UseValueOf'
    }

    repositories {
        flatDir {
            dir 'libs'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    buildToolsVersion = '29.0.0 rc2'
}

androidExtensions {
    experimental = true
}

static def gitRevision() {
    def cmd = "git rev-parse --short HEAD"
    return cmd.execute().text.trim()
}

static def gitRevisionUnixDate() {
    def cmd = "git show -s --format=%ct HEAD^{commit}"
    return cmd.execute().text.trim()
}

static def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // olm lib is now hosted by jitpack: https://jitpack.io/#org.matrix.gitlab.matrix-org/olm
    implementation 'org.matrix.gitlab.matrix-org:olm:3.1.2'

    // Database
    kapt 'dk.ilios:realmfieldnameshelper:1.1.1'

    // WebRTC
    // react-native-webrtc uses v0.59, which is not found, so force using the version 0.59.2 of react-native
    implementation('com.facebook.react:react-native:0.59.2')
    implementation('com.facebook.react:react-native-webrtc:1.69.0-jitsi-799011')
//    /************* jitsi **************/
//    implementation 'javax.inject:javax.inject:1'
//    implementation 'com.facebook.fbui.textlayoutbuilder:textlayoutbuilder:1.0.0'
//    implementation 'com.facebook.fresco:fresco:1.3.0'
//    implementation 'com.facebook.fresco:imagepipeline-okhttp3:1.3.0'
//    implementation 'com.facebook.soloader:soloader:0.1.0'
//    implementation 'com.google.code.findbugs:jsr305:3.0.2'
//    implementation 'org.webkit:android-jsc:r174650'
//    implementation(name: 'jitsi-sdk', ext: 'aar')
//    implementation(name: 'react-native-background-timer', ext: 'aar')
//    implementation(name: 'react-native-fetch-blob', ext: 'aar')
//    implementation(name: 'react-native-immersive', ext: 'aar')
//    implementation(name: 'react-native-keep-awake', ext: 'aar')
//    implementation(name: 'react-native-vector-icons', ext: 'aar')
//    implementation(name: 'react-native-webrtc', ext: 'aar')
//    implementation(name: 'react-native', ext: 'aar')
//    implementation(name: 'react-native-locale-detector', ext: 'aar')

//    // another tracking than GA
//    implementation 'org.piwik.sdk:piwik-sdk:2.0.0'

    /************* flavors management **************/
    // Test
    testImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'com.android.support.test:rules:1.0.2'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3' // fixes issue on linux/mac
    testImplementation "org.robolectric:robolectric:4.0.2"

    // Robolectric
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
}
