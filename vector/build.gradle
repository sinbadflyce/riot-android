apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
import com.android.build.OutputFile

apply plugin: "androidx.navigation.safeargs"

buildscript {
    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }

    dependencies {
        classpath "io.realm:realm-gradle-plugin:5.13.0"
    }
}

kapt {
    correctErrorTypes = true
}

// map for the version codes
// x86 must have greater values than arm, see https://software.intel.com/en-us/android/articles/google-play-supports-cpu-architecture-filtering-for-multiple-apk
// 64 bits have greater value than 32 bits
ext.abiVersionCodes = ["armeabi-v7a": 1, "arm64-v8a": 2, "x86": 3, "x86_64": 4].withDefault { 0 }

android {
    compileSdkVersion 29

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    signingConfigs {
        release {
            storeFile file("../clearkeep_password_Telred@1009.jks")
            storePassword 'Telred@1009'
            keyAlias 'clearkeep'
            keyPassword 'Telred@1009'
        }
    }

    defaultConfig {
        applicationId 'com.telred.clearkeep'
        minSdkVersion 21
        targetSdkVersion 29
        // use the version code
        versionCode rootProject.ext.versionCodeProp
        versionName rootProject.ext.versionNameProp

        // Keep abiFilter for the universalApk
        ndk {
            abiFilters "armeabi-v7a", "x86", 'arm64-v8a', 'x86_64'
        }

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.release
    }

    // Ref: https://developer.android.com/studio/build/configure-apk-splits.html
    splits {
        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true

            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for armeabi-v7a, x86, arm64-v8a and x86_64.

            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()

            // Specifies a list of ABIs that Gradle should create APKs for.
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"

            // Generate a universal APK that includes all ABIs, so user who install from CI tool can use this one by default.
            universalApk true
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def baseAbiVersionCode = project.ext.abiVersionCodes.get(output.getFilter(OutputFile.ABI))
            output.versionCodeOverride = baseAbiVersionCode * 10_000_000 + variant.versionCode
        }
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    buildTypes {
        debug {

            resValue "bool", "debug_mode", "true"
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
            resValue "string", "git_branch_name", "\"${gitBranchName()}\""
            resValue "string", "build_number", rootProject.ext.buildNumberProp
            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HOME_SERVER", "\"https://dev.clearkeep.me\""
            buildConfigField "String", "PUSH_GATEWAY", "\"http://push.clearkeep.xyz/_matrix/push/v1/notify\""
            buildConfigField "String", "IDENTIFY_SERVER", "\"https://matrix.org\""
            buildConfigField "String", "CLEAR_KEEP_SERVER", "\"http://op.clearkeep.xyz\""
            buildConfigField "String", "LINK_SHARE_APP", "\"/api/share/get-deep-link?url=app://account\""
        }

        release {
            resValue "bool", "debug_mode", "false"
            resValue "string", "git_revision", "\"${gitRevision()}\""
            resValue "string", "git_revision_date", "\"${gitRevisionDate()}\""
            resValue "string", "git_branch_name", "\"${gitBranchName()}\""
            resValue "string", "build_number", rootProject.ext.buildNumberProp
            buildConfigField "boolean", "LOW_PRIVACY_LOG_ENABLE", "false"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "HOME_SERVER", "\"https://s.clearkeep.me\""
            buildConfigField "String", "PUSH_GATEWAY", "\"https://push.clearkeep.me/_matrix/push/v1/notify\""
            buildConfigField "String", "IDENTIFY_SERVER", "\"https://id.clearkeep.me\""
            buildConfigField "String", "CLEAR_KEEP_SERVER", "\"https://op.clearkeep.me\""
            buildConfigField "String", "LINK_SHARE_APP", "\"/api/share/get-deep-link?url=app://account\""
        }
    }

    // Specifies a flavor dimension (no need to specify it in each productsFlavor, cause we only declare one dimension).
    flavorDimensions "flavor_dimension_vector"

    productFlavors {
        app {
            applicationId 'com.telred.clearkeep'
            // use the version name
            versionCode rootProject.ext.versionCodeProp
            versionName rootProject.ext.versionNameProp
            buildConfigField "boolean", "ALLOW_FCM_USE", "true"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"G\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"GooglePlay\""
        }

        appfdroid {
            applicationId 'com.telred.clearkeep'
            // use the version name
            versionCode rootProject.ext.versionCodeProp
            versionName rootProject.ext.versionNameProp
            buildConfigField "boolean", "ALLOW_FCM_USE", "false"
            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"F\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"FDroid\""
        }
    }

    lintOptions {
//        lintConfig file("lint.xml")
        checkReleaseBuilds false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    dataBinding {
        enabled = true
    }
}

apply plugin: 'org.jetbrains.kotlin.android.extensions'

androidExtensions {
    experimental = true
}

static def gitRevision() {
    def cmd = "git rev-parse --short HEAD"
    return cmd.execute().text.trim()
}

static def gitRevisionDate() {
    def cmd = "git show -s --format=%ci HEAD^{commit}"
    return cmd.execute().text.trim()
}

static def gitBranchName() {
    def cmd = "git name-rev --name-only HEAD"
    return cmd.execute().text.trim()
}

dependencies {
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Kotlin KTX (stick to this version, because project is not compatible with androidX)
    implementation 'androidx.core:core-ktx:1.1.0'

    // Kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation "org.jetbrains.anko:anko-commons:0.10.8"

    // Note: do not upgrade to 1.0.3 because it lead to crashes at startup on Android 16
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'me.leolin:ShortcutBadger:1.1.22'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.jakewharton:butterknife:10.2.1'
    kapt 'com.jakewharton:butterknife-compiler:10.2.1'

    /******************************** Work manager **************************/
    def worker_version = "2.2.0"
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$worker_version"
    implementation "androidx.work:work-rxjava2:$worker_version"
    /***********************************************************************/
    // UI
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.getbase:floatingactionbutton:1.10.1'
    implementation 'com.binaryfork:spanny:1.0.4'
    implementation 'com.github.chrisbanes:PhotoView:2.1.4'

    // Epoxy
    implementation 'com.airbnb.android:epoxy:3.7.0'
    kapt 'com.airbnb.android:epoxy-processor:3.7.0'
    implementation 'com.airbnb.android:mvrx:1.0.1'

    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.7.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.1'
    implementation "com.google.code.gson:gson:$gson_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.0'
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.1'
    implementation 'com.squareup.okio:okio:2.4.1'

    // Use Glide library to display image (Gif supported)
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'

    // Passphrase strength helper
    implementation 'com.nulab-inc:zxcvbn:1.3.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.11.1'

    //Alerter
    implementation 'com.tapadoo.android:alerter:4.0.3'

    /************* Matrix SDK management **************/
    // update settings.gradle
    // use the matrix SDK as external dependency
//    implementation "com.github.matrix-org:matrix-android-sdk:v0.9.27"
    // use the matrix SDK as a sub project
    // you have to uncomment some lines in settings.gradle


    /************* jitsi **************/
    implementation('org.jitsi.react:jitsi-meet-sdk:2.2.2')

    /************* analytics **************/
    // another tracking than GA
    implementation 'org.matomo.sdk:tracker:4.0.2'

    /************* flavors management **************/

    // app flavor only
    appImplementation('com.google.firebase:firebase-messaging:20.0.0') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }
    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // appfdroid flavor only

    // Test
    testImplementation 'junit:junit:4.13'
    testImplementation 'androidx.test:runner:1.2.0'
    testImplementation 'androidx.test:rules:1.2.0'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3' // fixes issue on linux/mac
    testImplementation 'org.robolectric:robolectric:4.3.1'

    // Robolectric
    androidTestImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    //===================== Rx Android ===========================================//
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Because RxAndroid releases are few and far between, it is recommended you also

    // explicitly depend on RxJava's latest version for bug fixes and new features.

    // (see https://github.com/ReactiveX/RxJava/releases for latest 2.x.x version)
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'

    //===========================================================================//

    //=========================== Google Dagger =================================//
    def google_dagger_version = "2.24"

    implementation "com.google.dagger:dagger:$google_dagger_version"
    kapt "com.google.dagger:dagger-compiler:$google_dagger_version"
    implementation "com.google.dagger:dagger-android:$google_dagger_version"
    implementation "com.google.dagger:dagger-android-support:$google_dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$google_dagger_version"

    //===========================================================================//

    /************************* Support ***************************/
    def support_version = "1.0.0"
    implementation "androidx.legacy:legacy-support-core-utils:$support_version"
//    implementation "androidx.legacy:legacy-support-v4:$support_version"
    implementation "androidx.legacy:legacy-support-core-ui:$support_version"
    /**************************************************************/

    // ================= Activity =======================================//
    def activity_version = "1.1.0-rc01"
    implementation "androidx.activity:activity-ktx:$activity_version"
//    implementation "androidx.activity:activity:$activity_version"
    //====================================================================//

    def fragment_version = "1.2.0-rc05"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
//    implementation "androidx.fragment:fragment:$fragment_version"
//    implementation "androidx.fragment:fragment-testing:$fragment_version"
    //============================== Lifecycle ======================================//
    def lifecycle_version = "2.2.0-rc03"

    // ViewModel and LiveData
//    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // alternatively - just ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // For Kotlin use lifecycle-viewmodel-ktx
    // alternatively - just LiveData
//    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
    //     AndroidX libraries use this lightweight import for Lifecycl
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"
    // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
//    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
    //==============================================================================================//

    def futures_version = "1.0.0-rc01"
    implementation "androidx.concurrent:concurrent-futures:$futures_version"

    /******************************** Navigation *****************************************/
    def nav_version = "2.2.0-rc04"
    // Kotlin
    implementation "androidx.navigation:navigation-runtime-ktx:$nav_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
//    implementation "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    /***************************************************************************************/
    def paging_version = "2.1.1"

    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // For Kotlin use paging-runtime-ktx

    // alternatively - without Android dependencies for testing
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
    // For Kotlin use paging-common-ktx

    // optional - RxJava support
    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version"
    // For Kotlin use paging-rxjava2-ktx
    //============================ Room ============================================//
    def room_version = "2.2.3"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
//    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
//    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"
    //===========================================================================//

    //==========================================================================//

    //======================== Circle ImageView ================================//
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    //==========================================================================//

    //======================== Error Prone Annotations =========================//
    implementation 'com.google.errorprone:error_prone_annotations:2.3.3'
    //==========================================================================//

    //================ RxBinding =========================================//
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-drawerlayout:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-leanback:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-recyclerview:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-viewpager:3.0.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-material:3.1.0'
    //======================================================================//
    //============== Bottom Dialog =========================================//
    implementation 'com.orhanobut:dialogplus:1.11@aar'
    //======================================================================//
    //============== Easy Permission =======================================//

    // For developers using the Android Support Library
    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
    //======================================================================//
    /*********************** Matrix Android SDK *****************************/
//    implementation project(path: ':matrix-sdk')
//    implementation project(path: ':matrix-sdk-crypto')
//    implementation project(path: ':matrix-sdk-core')

    implementation project(':matrix-sdk-core-release')
    implementation project(':matrix-sdk-crypto-release')
    implementation project('::matrix-sdk-release-0.9.32')
    /*************************************************************************/

    /************************** AssistedInject ****************************/
    def assisted_inject_version = "0.5.0"
    implementation "com.squareup.inject:assisted-inject-annotations-dagger2:$assisted_inject_version"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assisted_inject_version"
    /**********************************************************************/

    /********************************* olm *******************************/
//    implementation 'org.matrix.gitlab.matrix-org:olm:3.1.2'
//    implementation project(path:':olm-sdk')
    implementation project(':olm-sdk-release')
    /*********************************************************************/
    implementation 'gun0912.ted:tedpermission:2.2.2'
    implementation project(path: ':stickyscrollviewitems')
}

//Ensure we never move past okhttp 3.12.x
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.squareup.okhttp3' && details.requested.name == 'okhttp') {
            details.useVersion '3.12.3'
            details.because '3.13+ dropped support for android <5'
        }
    }
}

if (!getGradle().getStartParameter().getTaskRequests().toString().contains("Appfdroid")
        && !getGradle().getStartParameter().getTaskRequests().toString().contains("assembleAndroidTest")) {
    apply plugin: 'com.google.gms.google-services'
}
